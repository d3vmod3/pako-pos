// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WinFormsApp1.Data;

#nullable disable

namespace PAKOPointOfSale.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251014063121_AddedIsActiveFieldOnUsersTable")]
    partial class AddedIsActiveFieldOnUsersTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name = "Tools"
                        },
                        new
                        {
                            id = 2,
                            name = "Accessories"
                        },
                        new
                        {
                            id = 3,
                            name = "Electronics"
                        });
                });

            modelBuilder.Entity("SalesInvoiceItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<decimal>("discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("discount_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<int>("productid")
                        .HasColumnType("int");

                    b.Property<decimal>("quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("total_amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("transaction_id")
                        .HasColumnType("int");

                    b.Property<int>("transactionid")
                        .HasColumnType("int");

                    b.Property<string>("unit_of_measurement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("unit_price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("productid");

                    b.HasIndex("transactionid");

                    b.ToTable("SalesInvoiceItems");
                });

            modelBuilder.Entity("SuppliedProduct", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<decimal>("cost_price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("date_expiration")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("date_received")
                        .HasColumnType("datetime2");

                    b.Property<string>("product_brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sku")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("supplier_id")
                        .HasColumnType("int");

                    b.Property<string>("unit_of_measurement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("unit_price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("supplier_id");

                    b.ToTable("SuppliedProducts");

                    b.HasData(
                        new
                        {
                            id = 1,
                            cost_price = 40m,
                            created_at = new DateTime(2025, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            date_expiration = new DateTime(2026, 9, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            date_received = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            product_brand = "Coca Cola",
                            product_code = "CC500",
                            product_description = "Refreshing carbonated beverage",
                            product_name = "Coca Cola 500ml",
                            quantity = 500m,
                            remarks = "Delivered in bulk",
                            sku = "SUP-CC-500",
                            status = "Available",
                            supplier_id = 1,
                            unit_of_measurement = "pcs",
                            unit_price = 50m
                        },
                        new
                        {
                            id = 2,
                            cost_price = 38m,
                            created_at = new DateTime(2025, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            date_expiration = new DateTime(2026, 9, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            date_received = new DateTime(2025, 9, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            product_brand = "Pepsi",
                            product_code = "PE500",
                            product_description = "Sweet cola beverage",
                            product_name = "Pepsi 500ml",
                            quantity = 480m,
                            remarks = "High demand item",
                            sku = "SUP-PE-500",
                            status = "Available",
                            supplier_id = 2,
                            unit_of_measurement = "pcs",
                            unit_price = 48m
                        },
                        new
                        {
                            id = 3,
                            cost_price = 20m,
                            created_at = new DateTime(2025, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            date_expiration = new DateTime(2026, 3, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            date_received = new DateTime(2025, 9, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            product_brand = "Lays",
                            product_code = "PC100",
                            product_description = "Classic salted chips",
                            product_name = "Potato Chips Classic",
                            quantity = 300m,
                            remarks = "Snack item batch A",
                            sku = "SUP-PC-100",
                            status = "Available",
                            supplier_id = 3,
                            unit_of_measurement = "bags",
                            unit_price = 30m
                        },
                        new
                        {
                            id = 4,
                            cost_price = 18m,
                            created_at = new DateTime(2025, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            date_expiration = new DateTime(2026, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            date_received = new DateTime(2025, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            product_brand = "Hershey",
                            product_code = "CH200",
                            product_description = "Milk chocolate snack bar",
                            product_name = "Chocolate Bar Sweet",
                            quantity = 250m,
                            remarks = "Fast-moving goods",
                            sku = "SUP-CH-200",
                            status = "Available",
                            supplier_id = 4,
                            unit_of_measurement = "pcs",
                            unit_price = 25m
                        },
                        new
                        {
                            id = 5,
                            cost_price = 22000m,
                            created_at = new DateTime(2025, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            date_expiration = new DateTime(2030, 9, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            date_received = new DateTime(2025, 9, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            product_brand = "Dell",
                            product_code = "LPX200",
                            product_description = "Business performance laptop",
                            product_name = "Laptop X200",
                            quantity = 15m,
                            remarks = "New tech delivery",
                            sku = "SUP-LP-200",
                            status = "Available",
                            supplier_id = 5,
                            unit_of_measurement = "pcs",
                            unit_price = 25000m
                        },
                        new
                        {
                            id = 6,
                            cost_price = 1000m,
                            created_at = new DateTime(2025, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            date_expiration = new DateTime(2030, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            date_received = new DateTime(2025, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            product_brand = "Sony",
                            product_code = "HP300",
                            product_description = "Noise cancelling over-ear headphones",
                            product_name = "Headphones Pro",
                            quantity = 40m,
                            remarks = "High quality audio gear",
                            sku = "SUP-HP-300",
                            status = "Available",
                            supplier_id = 6,
                            unit_of_measurement = "pcs",
                            unit_price = 1200m
                        },
                        new
                        {
                            id = 7,
                            cost_price = 35m,
                            created_at = new DateTime(2025, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            date_expiration = new DateTime(2026, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            date_received = new DateTime(2025, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            product_brand = "Coca Cola",
                            product_code = "SP500",
                            product_description = "Lemon-lime beverage",
                            product_name = "Sprite 500ml",
                            quantity = 400m,
                            remarks = "Good stock turnover",
                            sku = "SUP-SP-500",
                            status = "Available",
                            supplier_id = 7,
                            unit_of_measurement = "pcs",
                            unit_price = 45m
                        },
                        new
                        {
                            id = 8,
                            cost_price = 15m,
                            created_at = new DateTime(2025, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            date_expiration = new DateTime(2026, 3, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            date_received = new DateTime(2025, 9, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            product_brand = "Oreo",
                            product_code = "BK150",
                            product_description = "Chocolate sandwich biscuits",
                            product_name = "Biscuits Pack",
                            quantity = 600m,
                            remarks = "Bulk delivery",
                            sku = "SUP-BK-150",
                            status = "Available",
                            supplier_id = 8,
                            unit_of_measurement = "pcs",
                            unit_price = 20m
                        },
                        new
                        {
                            id = 9,
                            cost_price = 13000m,
                            created_at = new DateTime(2025, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            date_expiration = new DateTime(2030, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            date_received = new DateTime(2025, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            product_brand = "Samsung",
                            product_code = "SPZ10",
                            product_description = "Android smartphone with AMOLED display",
                            product_name = "Smartphone Z10",
                            quantity = 25m,
                            remarks = "Latest batch",
                            sku = "SUP-SPZ-010",
                            status = "Available",
                            supplier_id = 9,
                            unit_of_measurement = "pcs",
                            unit_price = 15000m
                        },
                        new
                        {
                            id = 10,
                            cost_price = 10m,
                            created_at = new DateTime(2025, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            date_expiration = new DateTime(2026, 9, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            date_received = new DateTime(2025, 9, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            product_brand = "Wilkins",
                            product_code = "MW500",
                            product_description = "Clean bottled water",
                            product_name = "Mineral Water 500ml",
                            quantity = 1000m,
                            remarks = "Delivered weekly",
                            sku = "SUP-MW-500",
                            status = "Available",
                            supplier_id = 10,
                            unit_of_measurement = "pcs",
                            unit_price = 15m
                        });
                });

            modelBuilder.Entity("SupplierDetails", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("account_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contact_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("gateway")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("SupplierDetails");

                    b.HasData(
                        new
                        {
                            id = 1,
                            address = "123 Street A",
                            contact_number = "09170000001",
                            created_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            name = "ABC Traders"
                        },
                        new
                        {
                            id = 2,
                            address = "456 Street B",
                            contact_number = "09170000002",
                            created_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            name = "XYZ Supplies"
                        },
                        new
                        {
                            id = 3,
                            address = "789 Street C",
                            contact_number = "09170000003",
                            created_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            name = "MegaCorp"
                        },
                        new
                        {
                            id = 4,
                            address = "101 Street D",
                            contact_number = "09170000004",
                            created_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            name = "Foodies Inc"
                        },
                        new
                        {
                            id = 5,
                            address = "202 Street E",
                            contact_number = "09170000005",
                            created_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            name = "SnackKing"
                        },
                        new
                        {
                            id = 6,
                            address = "303 Street F",
                            contact_number = "09170000006",
                            created_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            name = "ElectroMart"
                        },
                        new
                        {
                            id = 7,
                            address = "404 Street G",
                            contact_number = "09170000007",
                            created_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            name = "Cool Drinks Co"
                        },
                        new
                        {
                            id = 8,
                            address = "505 Street H",
                            contact_number = "09170000008",
                            created_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            name = "Fresh Foods"
                        },
                        new
                        {
                            id = 9,
                            address = "606 Street I",
                            contact_number = "09170000009",
                            created_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            name = "Global Traders"
                        },
                        new
                        {
                            id = 10,
                            address = "707 Street J",
                            contact_number = "09170000010",
                            created_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            name = "Local Supplies"
                        });
                });

            modelBuilder.Entity("Transaction", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<decimal>("grand_total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("invoice_number")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("payment_method")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("sub_total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("vat_amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("vat_exempt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("vatable_sales")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("birthday")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("is_active")
                        .HasColumnType("bit");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("middle_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("suffix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("user_type_id")
                        .HasColumnType("int");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("user_type_id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            id = 1,
                            birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            created_at = new DateTime(2025, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            first_name = "Kate",
                            gender = "Female",
                            is_active = true,
                            last_name = "Taeza",
                            password = "password123",
                            user_type_id = 1,
                            username = "superadmin"
                        },
                        new
                        {
                            id = 2,
                            birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            created_at = new DateTime(2025, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            first_name = "Christy",
                            gender = "Female",
                            is_active = true,
                            last_name = "Anguluan",
                            password = "password123",
                            user_type_id = 2,
                            username = "admin"
                        },
                        new
                        {
                            id = 3,
                            birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            created_at = new DateTime(2025, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            first_name = "Bryan",
                            gender = "Male",
                            is_active = true,
                            last_name = "Mabborang",
                            password = "password123",
                            user_type_id = 3,
                            username = "cashier"
                        });
                });

            modelBuilder.Entity("UserType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("UserTypes");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name = "Super Admin"
                        },
                        new
                        {
                            id = 2,
                            name = "Admin"
                        },
                        new
                        {
                            id = 3,
                            name = "Cashier"
                        });
                });

            modelBuilder.Entity("WinFormsApp1.Model.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("category_id")
                        .HasColumnType("int");

                    b.Property<decimal>("cost_price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("date_expiration")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("date_received")
                        .HasColumnType("datetime2");

                    b.Property<string>("product_brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sku")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("supplier_id")
                        .HasColumnType("int");

                    b.Property<string>("unit_of_measurement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("unit_price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("category_id");

                    b.HasIndex("supplier_id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            id = 1,
                            category_id = 1,
                            cost_price = 40m,
                            created_at = new DateTime(2025, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            date_expiration = new DateTime(2026, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            date_received = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            product_brand = "Coca Cola",
                            product_code = "CC500",
                            product_description = "Refreshing soft drink",
                            product_name = "Coca Cola 500ml",
                            quantity = 100m,
                            remarks = "Best seller",
                            sku = "CC-500-001",
                            status = "Available",
                            supplier_id = 1,
                            unit_of_measurement = "pcs",
                            unit_price = 50m
                        },
                        new
                        {
                            id = 2,
                            category_id = 1,
                            cost_price = 38m,
                            created_at = new DateTime(2025, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            date_expiration = new DateTime(2026, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            date_received = new DateTime(2025, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            product_brand = "Pepsi",
                            product_code = "PE500",
                            product_description = "Carbonated soft drink",
                            product_name = "Pepsi 500ml",
                            quantity = 120m,
                            remarks = "Popular item",
                            sku = "PE-500-002",
                            status = "Available",
                            supplier_id = 2,
                            unit_of_measurement = "pcs",
                            unit_price = 48m
                        },
                        new
                        {
                            id = 3,
                            category_id = 2,
                            cost_price = 20m,
                            created_at = new DateTime(2025, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            date_expiration = new DateTime(2026, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            date_received = new DateTime(2025, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            product_brand = "Lays",
                            product_code = "PC100",
                            product_description = "Crunchy salted potato chips",
                            product_name = "Potato Chips Classic",
                            quantity = 200m,
                            remarks = "Snack item",
                            sku = "PC-100-003",
                            status = "Available",
                            supplier_id = 3,
                            unit_of_measurement = "pcs",
                            unit_price = 30m
                        },
                        new
                        {
                            id = 4,
                            category_id = 2,
                            cost_price = 18m,
                            created_at = new DateTime(2025, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            date_expiration = new DateTime(2026, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            date_received = new DateTime(2025, 10, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            product_brand = "Hershey",
                            product_code = "CH200",
                            product_description = "Milk chocolate bar",
                            product_name = "Chocolate Bar Sweet",
                            quantity = 150m,
                            remarks = "Sweet snack",
                            sku = "CH-200-004",
                            status = "Available",
                            supplier_id = 4,
                            unit_of_measurement = "pcs",
                            unit_price = 25m
                        },
                        new
                        {
                            id = 5,
                            category_id = 3,
                            cost_price = 22000m,
                            created_at = new DateTime(2025, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            date_expiration = new DateTime(2030, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            date_received = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            product_brand = "Dell",
                            product_code = "LPX200",
                            product_description = "High performance laptop",
                            product_name = "Laptop X200",
                            quantity = 10m,
                            remarks = "Electronics",
                            sku = "LP-200-005",
                            status = "Available",
                            supplier_id = 5,
                            unit_of_measurement = "pcs",
                            unit_price = 25000m
                        },
                        new
                        {
                            id = 6,
                            category_id = 3,
                            cost_price = 1000m,
                            created_at = new DateTime(2025, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            date_expiration = new DateTime(2030, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            date_received = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            product_brand = "Sony",
                            product_code = "HP300",
                            product_description = "Noise cancelling headphones",
                            product_name = "Headphones Pro",
                            quantity = 25m,
                            remarks = "Audio product",
                            sku = "HP-300-006",
                            status = "Available",
                            supplier_id = 6,
                            unit_of_measurement = "pcs",
                            unit_price = 1200m
                        },
                        new
                        {
                            id = 7,
                            category_id = 1,
                            cost_price = 35m,
                            created_at = new DateTime(2025, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            date_expiration = new DateTime(2026, 10, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            date_received = new DateTime(2025, 10, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            product_brand = "Coca Cola",
                            product_code = "SP500",
                            product_description = "Lemon-lime soft drink",
                            product_name = "Sprite 500ml",
                            quantity = 90m,
                            remarks = "Beverage",
                            sku = "SP-500-007",
                            status = "Available",
                            supplier_id = 7,
                            unit_of_measurement = "pcs",
                            unit_price = 45m
                        },
                        new
                        {
                            id = 8,
                            category_id = 2,
                            cost_price = 15m,
                            created_at = new DateTime(2025, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            date_expiration = new DateTime(2026, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            date_received = new DateTime(2025, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            product_brand = "Oreo",
                            product_code = "BK150",
                            product_description = "Chocolate sandwich biscuits",
                            product_name = "Biscuits Pack",
                            quantity = 300m,
                            remarks = "Snack",
                            sku = "BK-150-008",
                            status = "Available",
                            supplier_id = 8,
                            unit_of_measurement = "pcs",
                            unit_price = 20m
                        },
                        new
                        {
                            id = 9,
                            category_id = 3,
                            cost_price = 13000m,
                            created_at = new DateTime(2025, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            date_expiration = new DateTime(2030, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            date_received = new DateTime(2025, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            product_brand = "Samsung",
                            product_code = "SPZ10",
                            product_description = "Android smartphone",
                            product_name = "Smartphone Z10",
                            quantity = 15m,
                            remarks = "Electronics",
                            sku = "SPZ-010-009",
                            status = "Available",
                            supplier_id = 9,
                            unit_of_measurement = "pcs",
                            unit_price = 15000m
                        },
                        new
                        {
                            id = 10,
                            category_id = 1,
                            cost_price = 10m,
                            created_at = new DateTime(2025, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            date_expiration = new DateTime(2026, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            date_received = new DateTime(2025, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            product_brand = "Wilkins",
                            product_code = "MW500",
                            product_description = "Bottled water",
                            product_name = "Mineral Water 500ml",
                            quantity = 250m,
                            remarks = "Beverage",
                            sku = "MW-500-010",
                            status = "Available",
                            supplier_id = 10,
                            unit_of_measurement = "pcs",
                            unit_price = 15m
                        });
                });

            modelBuilder.Entity("SalesInvoiceItem", b =>
                {
                    b.HasOne("WinFormsApp1.Model.Product", "product")
                        .WithMany()
                        .HasForeignKey("productid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Transaction", "transaction")
                        .WithMany("sales_invoice_items")
                        .HasForeignKey("transactionid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");

                    b.Navigation("transaction");
                });

            modelBuilder.Entity("SuppliedProduct", b =>
                {
                    b.HasOne("SupplierDetails", "supplier")
                        .WithMany()
                        .HasForeignKey("supplier_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("supplier");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.HasOne("UserType", "userType")
                        .WithMany("Users")
                        .HasForeignKey("user_type_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("userType");
                });

            modelBuilder.Entity("WinFormsApp1.Model.Product", b =>
                {
                    b.HasOne("Category", "category")
                        .WithMany("Products")
                        .HasForeignKey("category_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SupplierDetails", "supplier")
                        .WithMany("products")
                        .HasForeignKey("supplier_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");

                    b.Navigation("supplier");
                });

            modelBuilder.Entity("Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("SupplierDetails", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("Transaction", b =>
                {
                    b.Navigation("sales_invoice_items");
                });

            modelBuilder.Entity("UserType", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
